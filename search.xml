<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python主流web框架</title>
      <link href="/posts/6c901a7d.html"/>
      <url>/posts/6c901a7d.html</url>
      
        <content type="html"><![CDATA[<p>今天来介绍一下知识点，明天我来更新当下主流4个web框架。</p><p>目前Python的网络编程框架已经多达几十个，逐个学习它们显然不现实。但这些框架在系统架构和运行环境中有很多共通之处，本文带领读者学习基于Python网络框架开发的常用知识,及目前的4种主流Python网络框架：Django、Tornado、Flask、Twisted。</p><p>网络框架及MVC架构<br>所谓网络框架是指这样的一组Python包，它能够使开发者专注于网站应用业务逻辑的开发，而无须处理网络应用底层的协议、线程、进程等方面。这样能大大提高开发者的工作效率，同时提高网络应用程序的质量。<br>在目前Python语言的几十个开发框架中，几乎所有的全栈网络框架都强制或引导开发者使用MVC架构开发Web应用。所谓全栈网络框架，是指除了封装网络和线程操作，还提供HTTP栈、数据库读写管理、HTML模板引擎等一系列功能的网络框架。本文重点讲解的Django、Tornado和Flask是全栈网络框架的典型标杆；而Twisted更专注于网络底层的高性能封装而不提供HTML模板引擎等界面功能，所以不能称之为全栈框架。<br>MVC（Model-View-Controller）模式最早由Trygve Reenskaug在1978年提出，在20世纪80年代是程序语言Smalltalk的一种内部架构。后来MVC被其他语言所借鉴，成为了软件工程中的一种软件架构模式。MVC把Web应用系统分为3个基本部分。</p><p>模型（Model）：用于封装与应用程序的业务逻辑相关的数据及对数据的处理方法，是Web应用程序中用于处理应用程序的数据逻辑的部分，Model只提供功能性的接口，通过这些接口可以获取Model的所有功能。Model不依赖于View和Controller，它们可以在任何时候调用Model访问数据。有些Model还提供了事件通知机制，为在其上注册过的View或Controller提供实时的数据更新。<br>视图（View）：负责数据的显示和呈现，View是对用户的直接输出。MVC中的一个Model通常为多个View提供服务。为了获取Model的实时更新数据，View应该尽早地注册到Model中。</p><p>控制器（Controller）：负责从用户端收集用户的输入，可以看成提供View的反向功能。当用户的输入导致View发生变化时，这种变化必须是通过Mod</p><p><img src="https://pic.imgdb.cn/item/6416c89fa682492fccad0f01.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ChatGPT简单注册方法！一分钟注册</title>
      <link href="/posts/efd25192.html"/>
      <url>/posts/efd25192.html</url>
      
        <content type="html"><![CDATA[<h2 id="快速注册ChatGPT方法-最近爆火的AI，你体验到了吗">快速注册ChatGPT方法-最近爆火的AI，你体验到了吗</h2><ul><li>有没有梯子 or 魔法？</li><li>有没有海外手机号？</li></ul><h3 id="国内手机卡问题">国内手机卡问题</h3><p>首先，<code>OpenAI</code>他是不能使用国内手机号注册的，那怎么办呢。</p><p>我们可以选择虚拟号码（不要尝试干坏事）。</p><blockquote><p><a href="https://sms-activate.org/">海外手机号接码</a></p></blockquote><p>我们可以先注册这个网站的账户（<a href="https://sms-activate.org/%EF%BC%89%E3%80%82">https://sms-activate.org/）。</a></p><p>这个网站很强大。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/052585feb6b2123997fb1e5a9913b124.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>我们注册后登录，搜索并选择OpenAi服务。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/c4afb9b5dacc0fd01f476d2cc2e12dc2.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>很便宜，我选择的印度的卡，折合<code>RMB</code>1.5￥，如果你没有充值，他可能说你余额不足。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/40ebea1ce7787d688487109569623ae0.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>这里有充值入口。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/9a44edc7eb0e29341c7df009d45201d4.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>支持支付宝支付。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/e94837054c4d0bf8d58649a3bd61461b.png?imageView2/2/w/2560/h/7000" alt="img"></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/33c373d4378076e637d7a6a4b32d210e.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>0.2美元，折合<code>RMB</code>1.47￥。</p><h3 id="注册OpenAi账户">注册OpenAi账户</h3><p>前往<code>OpenAi</code>首页，地址：<a href="https://chat.openai.com/%E3%80%82">https://chat.openai.com/。</a></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/cecea76f8cec9e28271949d6bc48df67.png?imageView2/2/w/2560/h/7000" alt="img"></p><blockquote><p>我这里浏览器自动使用了网页翻译。</p></blockquote><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/023d14e25aca0ac9a1e7a660bbe58327.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>创建一个账户。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/c79b0e443f39badd39290346dfa62a48.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>因为我有Google账户，所以我使用的是谷歌账户登录，但是还是要绑定海外手机卡。</p><p>我尝试邮箱注册。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/9d5f42b7eeb4a9c56c7582bf9e9e1753.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>我们会收到一封邮件。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/cbf2990ef81189fd3d9ba632a7ee8592.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>验证一下。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/2d2243b97287f1fcb3a91028c1bc11f6.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>继续填写相关信息。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/d3316ff7d55d0a3317b44994e6bbc65b.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>填写手机号，我们是买的印度虚拟卡，我们选择这个。</p><p>虚拟卡网站里面，购买后会看到如下信息。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/c1440c7dd4c1e9527eb191b7d7d8ec70.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>注意，有效期只有20分钟，抓紧点，一般5分钟就差不多注册完成了。</p><p>我们复制手机号。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/05941d9f447d4a029cdf7264e896946e.png?imageView2/2/w/2560/h/7000" alt="img"></p><blockquote><p><strong>要去掉前面的<code>91</code>。</strong></p></blockquote><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/5289d10c3c23014039c7e8a3168f23d3.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>获取<a href="https://cloud.tencent.com/product/captcha?from=10680">验证码</a>。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/7631bb02decebfb50be60ed3a9919ba1.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>前往这个页面耐心等待验证码到来。</p><p>我大概等待半分钟。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/1cbe513867249a5e1934292d0ec66063.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>复制然后注册。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/00d832e75af4a43a15b38ea20ce83054.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>正常选择一个。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/14e6d790db16489c506fff576b68e287.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>好了，注册成功，自动进入页面。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/f65e6a3e927f55719ca07679ed4e3b95.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>但是这个页面只是一些示例、教程、文档，我们对话要去这儿：<a href="https://chat.openai.com/">https://chat.openai.com/</a></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/6f1bf6a39c2358556354f0c550e01176.png?imageView2/2/w/2560/h/7000" alt="img"></p><p><img src="https://ask.qcloudimg.com/http-save/yehe-9415984/7271d0841bd566cb7f469b2892bdcd4b.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>这样就进来了。</p><h2 id="注意事项">注意事项</h2><p>如果登录不进去，清除浏览器缓存再试试！</p>]]></content>
      
      
      <categories>
          
          <category> ChatGPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派一些常见的指令</title>
      <link href="/posts/28e9475e.html"/>
      <url>/posts/28e9475e.html</url>
      
        <content type="html"><![CDATA[<h1>1.关机与重启</h1><h2 id="关机">关机</h2><p>sudo shutdown -h now  #或者 sudo halt</p><h2 id="重启">重启</h2><p>sudo shutdown -r now  #或者 sudo reboot</p><h1>2. 用户与密码</h1><p>树莓派默认主机名是 raspberrypi，默认用户是 pi，密码为 raspberry。</p><h2 id="修改密码">修改密码</h2><p>pi@raspberrypi:~$ sudo passwd<br>Enter new UNIX password:   #输入第一遍密码<br>Retype new UNIX password:  #输入第二遍密码<br>树莓派有一个 root 账号，但默认不启用。如果想折腾，可以启用 ROOT 账号。使用 pi 用户登录后，执行</p><p>pi@raspberrypi:~$ sudo passwd root<br>输入两遍密码即可修改 root 密码。</p><h2 id="切换用户">切换用户</h2><p>su root #切换到root用户<br>如切换用户失败，说明 root 账号已锁定，需要解锁。</p><p>pi@raspberrypi:~$ sudo passwd --unlock root<br>passwd:<br>输入密码，即可解锁 root 账号。</p><h1>3.更新系统与软件</h1><h2 id="更新软件信息数据库">更新软件信息数据库</h2><p>apt-get update</p><h2 id="进行系统升级">进行系统升级</h2><p>apt-get upgrade</p><h2 id="安装软件">安装软件</h2><p>apt-get install softname1 softname2 softname3……</p><h2 id="卸载软件">卸载软件</h2><p>apt-get remove softname1 softname2 softname3……</p><h2 id="卸载并清除配置">卸载并清除配置</h2><p>apt-get remove –purge softname1</p><h2 id="搜索软件包">搜索软件包</h2><p>apt-cache search softname1 softname2 softname3……</p><h1>4.文件和文件夹操作</h1><h2 id="文件夹导航命令">文件夹导航命令</h2><p>ls  #查看当前目录内容<br>cd work #切换到 work 工作目录<br>pwd   #查看当前路径</p><h2 id="创建文件夹">创建文件夹</h2><p>mkdir work  # 在当前目录创建一个 work 文件夹<br>删除文件目录，可使用 rm 或者 rmdir 命令。</p><h2 id="使用rmdir命令删除文件夹">使用rmdir命令删除文件夹</h2><p>rmdir work # 删除 work 文件夹<br>使用 rm 命令可删除文件和文件夹</p><p>rm -rf  work  # 删除 work 文件夹<br>rm   test.txt  # 删除 test.txt 文件<br>需要注意的是，不能直接使用 rm 来删除文件目录，rm 指令后面需要参数。</p><p>-r 就是向下递归，不管有多少级目录，一并删除 -f 就是直接强行删除，不作任何提示。</p><p>修改文件名或文件夹名，使用 mv 命令。</p><h2 id="mv-旧文件名-新文件名">mv 旧文件名  新文件名</h2><p>mv demo demo1  # 将demo文件夹修改为demo1<br>创建文件</p><p>相比创建目录的方法，创建文件的方法就会多一些。</p><p>可以使用 vi 命令，vim命令 或者是 touch 命令。这几个命令的使用方式都是指令 + 文件名。</p><p>vi one.txt<br>vim two.txt<br>touch three.txt<br>不同之处 在于 vi 或者 vim 命令时，会跳转到文本编辑长，创建的文件需要保存才会生效。而 touch 命令则会直接创建空白文件。</p><h1>5.传输文件</h1><p>可以简单用 scp 命令来实现。</p><p>scp[本地文件的路径] [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp /Users/mac/Desktop/test.txt <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root<br>从本地将文件夹传输到服务器:</p><p>scp -r[本地文件的路径] [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp -r /Users/mac/Desktop/test <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root<br>将服务器上的文件传输到本地:</p><p>scp [服务器用户名]@[服务器地址]:[服务器上存放文件的路径] [本地文件的路径]</p><p>scp <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root/default/test.txt /Users/mac/Desktop<br>将服务器上的文件夹传输到本地:</p><p>scp -r [服务器用户名]@[服务器地址]:[服务器上存放文件的路径] [本地文件的路径]</p><p>scp -r <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root/default/test /Users/mac/Desktop<br>scp 指令在 mac OS 系统中也可使用，因此可用来向树莓派上传输文件。</p><p>指令中的文件路径，必须是绝对路径。如不知道文件或文件夹的绝对路径，可使用 pwd 命令查看。</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客哔哩哔哩视频适应配置</title>
      <link href="/posts/fc3c7629.html"/>
      <url>/posts/fc3c7629.html</url>
      
        <content type="html"><![CDATA[<p>在<code>[BlogRoot]\source\css\custom.css</code>自定义样式的文件中引入如下代码（这是我的，你可以自行微调）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*哔哩哔哩视频适配*/</span></span><br><span class="line"><span class="selector-class">.aspect-ratio</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3%</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aspect-ratio</span> <span class="selector-tag">iframe</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">86%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接复制插入你的 <code>md</code> 文章就行，修改里面的 <code>aid</code> 为你视频的 <code>AV</code>号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;iframe src=&quot;https://player.bilibili.com/player.html?aid=474023258&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot; </span></span><br><span class="line"><span class="code">    scrolling=&quot;no&quot; </span></span><br><span class="line"><span class="code">    border=&quot;0&quot; </span></span><br><span class="line"><span class="code">    frameborder=&quot;no&quot; </span></span><br><span class="line"><span class="code">    framespacing=&quot;0&quot; </span></span><br><span class="line"><span class="code">    high_quality=1</span></span><br><span class="line"><span class="code">    danmaku=1 </span></span><br><span class="line"><span class="code">    allowfullscreen=&quot;true&quot;&gt; </span></span><br><span class="line"><span class="code">    &lt;/iframe&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 哔哩哔哩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哔哩哔哩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门知识（3）</title>
      <link href="/posts/e93029ce.html"/>
      <url>/posts/e93029ce.html</url>
      
        <content type="html"><![CDATA[<h2 id="九，数据类型">九，数据类型</h2><p>整数：可以为任意大小、包含负数</p><p>浮点数：就是小数</p><p>字符串：以单引号 ‘、双引号&quot;、三引号 ‘’’ 或 “”&quot;括起来的文本</p><p>布尔：只有 True、False 两种值</p><p>空值：用 None 表示</p><p>变量：是可变的</p><p>常量：不可变</p><h2 id="十，运算符">十，运算符</h2><p>10.1</p><ul><li>相加a + b</li></ul><ul><li>相减a - b</li></ul><ul><li>相乘a * b<br>/相除a / b<br>%取模a % b<br>**幂a**b 表示 a 的 b 次幂<br>//取整除9 // 4 结果为 2<br>==是否相等a == b<br>&gt;是否大于a &gt; b<br>&gt;=是否大于等于a &gt;= b<br>&lt;=是否小于等于a &lt;= b<br>=简单的赋值运算符a = b + c<br>+=加法赋值运算符a += b 等效于 a = a + b<br>-=减法赋值运算符a -= b 等效于 a = a - b<br>*=乘法赋值运算符a *= b 等效于 a = a * b<br>/=除法赋值运算符a /= b 等效于 a = a / b<br>%=取模赋值运算符a %= b 等效于 a = a % b<br>*=**幂赋值运算符a **= b 等效于 a = a ** b<br>//=取整除赋值运算符a //= b 等效于 a = a // b<br>&amp;与a &amp; b<br>|或a | b<br>^异或a ^ b<br>~取反~a<br>&lt;&lt;左移动a &lt;&lt; 3<br>&gt;&gt;右移动a &gt;&gt; 3<br>and布尔类型与a and b<br>or布尔类型或a or b<br>not布尔类型非not a<br>is判断两个标识符是否引用同一个对象a is b<br>is not判断两个标识符是否引用不同对象a is not b</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我愿称之为史上最强小说阅读神器！</title>
      <link href="/posts/d5ef4390.html"/>
      <url>/posts/d5ef4390.html</url>
      
        <content type="html"><![CDATA[<p>最强阅读神器内置1200种书源全网所有资源免费看，无广告非常强大导入书源简单一键导入书源</p><p>【应用名称】阅读</p><p>【应用版本】3.23.030</p><p>【资源大小】12.7M</p><p>朗读速度添加数值显示<br>章节进度添加xx/yyy格式<br>远程书籍单独配置webDav,多个webDav看情况再添加</p><p>阅读app，免费开源阅读软件，网络文学搜索的工具，可以订阅自定义书源阅读网络内容的工具，为网络文学爱好者提供个性化功能，在线阅读、本地阅读、书源订阅、书源净化、智能搜索、阅读设置等多项功能</p><p>免费开源，纯净无广告<br>– 列表书架，网格书架自由切换<br>– 书源规则支持搜索及发现，所有找书看书功能全部自定义，找书更方便<br>– 自定义书源，自己设置规则，抓取网页数据，规则简单易懂，内有规则说明<br>– 支持替换净化第三方书源，去除广告替换内容很方便<br>– 支持本地TXT、EPUB阅读，手动浏览，智能扫描<br>– 支持高度自定义阅读界面，切换字体、颜色、背景、行距、段距、加粗、简繁转换等<br>– 支持多种翻页模式，覆盖、仿真、滑动、滚动等</p><p>下载链接：<a href="https://legado.aoaostar.com/">https://legado.aoaostar.com/</a></p><p>优质书源分享：</p><p><a href="https://cdn.jsdelivr.net/gh/yeyulingfeng01/yuedu.github.io/yeudu3.0-202005.json">https://cdn.jsdelivr.net/gh/yeyulingfeng01/yuedu.github.io/yeudu3.0-202005.json</a></p><p><a href="https://cdn.jsdelivr.net/gh/yeyulingfeng01/yuedu.github.io@1.1/202003.txt">https://cdn.jsdelivr.net/gh/yeyulingfeng01/yuedu.github.io@1.1/202003.txt</a></p><p><a href="https://moonbegonia.github.io/Source/yuedu/audio.json">https://moonbegonia.github.io/Source/yuedu/audio.json</a></p><p><a href="https://yuedu.xiu2.xyz/shuyuan">https://yuedu.xiu2.xyz/shuyuan</a></p>]]></content>
      
      
      <categories>
          
          <category> 小说 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门知识（2）</title>
      <link href="/posts/518c4eab.html"/>
      <url>/posts/518c4eab.html</url>
      
        <content type="html"><![CDATA[<p>第二期来了</p><h2 id="四，编码">四，编码</h2><p>Python2 中默认编码为 ASCII，假如内容为汉字，不指定编码便不能正确的输出及读取，比如我们想要指定编码为 UTF-8，Python 中通过在开头加入 # -<em>- coding: UTF-8 -</em>- 进行指定。</p><p>Python3 中默认编码为 UTF-8，因此在使用 Python3 时，我们通常不需指定编码。</p><h2 id="五，输出输入">五，输出输入</h2><p>Python 输出使用 print()，内容加在括号中即可<br>Python 提供了一个 input()，可以让用户输入字符串，并存放到一个变量里。</p><h2 id="六，缩进">六，缩进</h2><p>Python 不使用 {} 来控制类、函数、逻辑判断等，而是使用缩进，缩进的空格可变。</p><h2 id="七，多行">七，多行</h2><p>Python 中一般以新行作为语句的结束标识，可以使用 \ 将一行语句分为多行显示。<br>如果包含在 []、{}、() 括号中，则不需要使用 \。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python入门知识（1）</title>
      <link href="/posts/4339e145.html"/>
      <url>/posts/4339e145.html</url>
      
        <content type="html"><![CDATA[<p>这些东西都是从一些Python书上总结下来的</p><h2 id="一，标识符">一，标识符</h2><p>1标识符是编程时使用的名字，用于给变量、函数、语句块等命名，Python 中标识符由字母、数字、下划线组成，不能以数字开头，区分大小写。<br>以下划线开头的标识符有特殊含义，单下划线开头的标识符，如：_xxx ，表示不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 导入；双下划线开头的标识符，如：__xx，表示私有成员；双下划线开头和结尾的标识符，如：<strong>xx</strong>，表示 Python 中内置标识，如：<strong>init</strong>() 表示类的构造函数</p><h2 id="二，关键词">二，关键词</h2><p>见一图，表中是Python的保留字，我们在自定义标识符时不能使用关键字</p><h2 id="三，引号">三，引号</h2><p>Python 可以使用引号（‘）、双引号（&quot;）、三引号（’‘’ 或 “”&quot;）来表示字符串，引号的开始与结束须类型相同，三引号可以由多行组成</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo最简单搭建教程！干货分享！</title>
      <link href="/posts/b8138abc.html"/>
      <url>/posts/b8138abc.html</url>
      
        <content type="html"><![CDATA[<h1>1.开始搭建</h1><h2 id="1-1准备">1.1准备</h2><h3 id="注意事项">注意事项</h3><ul><li>输入代码时，核对准确，最好切换成英文输入法；</li><li>将文中的 “用户名” 和 “邮箱” 替换为自己的 GitHub 账户名和绑定的邮箱；</li></ul><h2 id="2-安装Node">2.安装Node</h2><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。</p><p>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>建议选个低版本的</p><p>历史版本下载页面：<a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a></p><ol><li><p>下载后安装，安装的目录可以使用默认目录【C:/Program Files/nodejs/】。</p></li><li><p>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</p></li><li><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h2 id="3-安装Hexo">3.安装Hexo</h2></li><li><p>在<code>Git BASH</code>输入如下命令安装</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHELL</span></span><br><span class="line"><span class="keyword"></span>npm <span class="keyword">install </span>-g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入hexo -v验证是否安装成功。</p></li></ol><p><img src="https://s1.vika.cn/space/2022/10/27/f05830f48da44ea98d2a55c3a6663004" alt=""></p><h2 id=""></h2><h2 id="4-Github注册">4.Github注册</h2><ol><li>进入官网 <a href="https://github.com/">https://github.com/</a><br><a href="https://bu.dusays.com/2022/05/12/627d2c0449341.webp"><img src="https://bu.dusays.com/2022/05/12/627d2c0449341.webp" alt="Github注册"></a></li><li>点击右上角的 Sign up(注册)<br><a href="https://bu.dusays.com/2022/05/12/627d2c05ee628.png"><img src="https://bu.dusays.com/2022/05/12/627d2c05ee628.png" alt="Github注册"></a></li><li>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</li><li>注册完成后，点击右上角的<code>+</code>按钮，选择<code>New repository</code>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</li></ol><p><a href="https://s1.vika.cn/space/2022/10/27/7a06143d180d47088833a486732dccf5"><img src="https://s1.vika.cn/space/2022/10/27/7a06143d180d47088833a486732dccf5" alt="image-20221027110619071"></a></p><ul><li>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</li><li>Description：为描述仓库（选填）</li><li>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</li><li>点击 Creat repository 进行创建</li></ul><p><a href="https://s1.vika.cn/space/2022/10/27/0a4dbb10ca69422ca9ccb7493d0f177a"><img src="https://s1.vika.cn/space/2022/10/27/0a4dbb10ca69422ca9ccb7493d0f177a" alt="image-20221027111641909"></a></p><h2 id="5-Git的安装">5.Git的安装</h2><ol><li><p>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></li><li><p>由于官网下载太慢可以通过淘宝的开源镜像下载</p></li><li><p>网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a></p></li><li><p>下载版本更具自己的需求选择即可。</p><p><a href="https://s1.vika.cn/space/2022/10/27/28a7d7e6ef3f4df080da8d7e8337431b"><img src="https://s1.vika.cn/space/2022/10/27/28a7d7e6ef3f4df080da8d7e8337431b" alt="image-20221027111755697"></a></p></li><li><p>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</p></li><li><p>点击电脑左下角开始即可看见<code>Git Bash</code>。</p></li></ol><p><a href="https://bu.dusays.com/2022/05/13/627d410ddc940.webp"><img src="https://bu.dusays.com/2022/05/13/627d410ddc940.webp" alt="Git Bash"></a></p><ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul><ol><li><p>常用命令</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  <span class="string">//</span>查看所有配置</span><br><span class="line">git config <span class="params">--system</span> <span class="params">--list</span> <span class="string">//</span>查看系统配置</span><br><span class="line">git config <span class="params">--global</span> <span class="params">--list</span> <span class="string">//</span>查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.name</span> <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.email</span> <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过<code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</p><p><a href="https://s1.vika.cn/space/2022/10/27/9115d60b377a47f3a8b79779a287ee65"><img src="https://s1.vika.cn/space/2022/10/27/9115d60b377a47f3a8b79779a287ee65" alt="image-20221027112049822"></a></p></li></ol><h2 id="6-连接到GitHub">6.连接到GitHub</h2><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHELL</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span></span><br></pre></td></tr></table></figure><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p><a href="https://bu.dusays.com/2022/05/14/627e87126fc59.png"><img src="https://bu.dusays.com/2022/05/14/627e87126fc59.png" alt="公钥"></a></p><p>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。</p><p><a href="https://bu.dusays.com/2022/05/14/627e87156038a.png"><img src="https://bu.dusays.com/2022/05/14/627e87156038a.png" alt="记事本打开公钥"></a></p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。</p><p><img src="https://s1.vika.cn/space/2022/10/27/4a69d999fed54ff78a5b84805d3c6a12" alt="image-20221027112347632"></p><p><a href="https://s1.vika.cn/space/2022/10/27/aa20ae7d8db34e2596638f5f031f0814"><img src="https://s1.vika.cn/space/2022/10/27/aa20ae7d8db34e2596638f5f031f0814" alt="image-20221027112416710"></a></p><p><a href="https://s1.vika.cn/space/2022/10/27/eaccde8a10eb4cde945a1ed221bb6ace"><img src="https://s1.vika.cn/space/2022/10/27/eaccde8a10eb4cde945a1ed221bb6ace" alt="image-20221027112657256"></a></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/122bb1ef33074bee84030a525ce1ec56"><img src="https://s1.vika.cn/space/2022/10/27/122bb1ef33074bee84030a525ce1ec56" alt="image-20221027112918539"></a></p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p></li></ol><h2 id="7-初始化Hexo">7.初始化Hexo</h2><ol><li><p>在目标路径（我这里选的路径为【C:/Hexo-Blog】）打开cmd命令窗口，执行<code>hexo init</code>初始化项目。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">hexo</span> <span class="variable">init</span> <span class="variable">blog</span>-<span class="function"><span class="title">demo</span>(项目名)</span></span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/1fbeb52671cf4b1daeca3660d1a31a2f"><img src="https://s1.vika.cn/space/2022/10/27/1fbeb52671cf4b1daeca3660d1a31a2f" alt="image-20221027113206776"></a></p></li><li><p>进入<code>blog-demo</code> ，输入<code>npm i</code>安装相关依赖。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog-demo  <span class="regexp">//</span>进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/150eeb3e61c94b89a1cad2a3079b1f94"><img src="https://s1.vika.cn/space/2022/10/27/150eeb3e61c94b89a1cad2a3079b1f94" alt="image-20221027113331624"></a></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：</p></li></ol><p><a href="https://s1.vika.cn/space/2022/10/27/70cf503f27c54d30a31c6b13735023b7"><img src="https://s1.vika.cn/space/2022/10/27/70cf503f27c54d30a31c6b13735023b7" alt="image-20221027113438707"></a></p><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><ol><li><p>输入hexo server或者hexo s 启动项目</p><p><a href="https://s1.vika.cn/space/2022/10/27/688592f6db1448d29a2f722fc7a0bb0a"><img src="https://s1.vika.cn/space/2022/10/27/688592f6db1448d29a2f722fc7a0bb0a" alt="image-20221027113534970"></a></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。</p><p><a href="https://bu.dusays.com/2022/05/26/628e5423df640.webp"><img src="https://bu.dusays.com/2022/05/26/628e5423df640.webp" alt="博客首页"></a></p></li></ol><h2 id="8-将Hexo挂载到GitHub-Pages">8.将Hexo挂载到GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>修改 _config.yml 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> git@github.com:Fomalhaut-Blog/Fomalhaut-Blog.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> main</span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo <span class="keyword">generate</span> &amp;&amp; hexo deploy  <span class="comment">// Git BASH终端</span></span><br><span class="line">hexo clean; hexo <span class="keyword">generate</span>; hexo deploy  <span class="comment">// VSCODE终端</span></span><br></pre></td></tr></table></figure><ul><li><p>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</p></li><li><p>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</p></li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p><p><a href="https://s1.vika.cn/space/2022/10/27/7ed7b8256d75408aa86e90cd37d0ea53"><img src="https://s1.vika.cn/space/2022/10/27/7ed7b8256d75408aa86e90cd37d0ea53" alt="image-20221027113704801"></a></p><p>注意：deploy时可能要你输入 username 和 password。</p><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p><a href="https://s1.vika.cn/space/2022/10/27/85b61e7242214d368539d744b4778a5d"><img src="https://s1.vika.cn/space/2022/10/27/85b61e7242214d368539d744b4778a5d" alt="image-20221027113756069"></a></p><p>稍等两分钟，打开浏览器访问：<a href="https://fomalhaut-blog.github.io/">https://wangwuyue0916.github.io</a> ，这时候我们就可以看到博客内容了。</p><p><a href="https://s1.vika.cn/space/2022/10/27/6de50dfe03604b07aa26fb7dd5fe1f99"><img src="https://s1.vika.cn/space/2022/10/27/6de50dfe03604b07aa26fb7dd5fe1f99" alt="image-20221027113923949"></a></p></li></ul></li></ol><h1>结尾</h1><p>ok，到这里Hexo的基本框架就已经完成了！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 演示 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建属于自己的原神qq机器人</title>
      <link href="/posts/6a653911.html"/>
      <url>/posts/6a653911.html</url>
      
        <content type="html"><![CDATA[<h1>云崽bot v3</h1><p>原神qq群机器人，通过米游社接口，查询原神游戏信息，快速生成图片返回</p><p><img src="https://developer.qcloudimg.com/http-save/yehe-admin/3387e1138120725f49fc3bbb364468b3.jpg?imageView2/2/w/2560/h/7000" alt="img"></p><p>云崽bot</p><h2 id="准备环境">准备环境</h2><p>Windows or Linux，Node.js（<a href="http://nodejs.cn/download/">版本至少v16以上</a><a href="https://redis.io/docs/getting-started/installation/">Redis</a></p><h2 id="部署方式">部署方式</h2><ol><li>宝塔安装所需环境，在控制台执行命令安装。</li><li>使用<a href="https://cloud.tencent.com/product/tke?from=10680">docker</a>安装，目前云崽已经支持docker安装。（推荐）</li></ol><h3 id="宝塔安装环境部署">宝塔安装环境部署</h3><p>首先我们要安装<a href="https://bt.cn/new/download.html">宝塔</a>，宝塔的安装就不一一说明啦，贴出官方安装文档。</p><h4 id="安装环境">安装环境</h4><p>安装pm2管理器，内置很多依赖。不用频繁安装依赖。</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/bc9180655d9211e2c9362ace11408457.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>安装pm2管理器</p><p><strong>打开pm2管理器，切记！！！！一定要切换版本且显示版本号才可以正常使用node。</strong></p><p><img src="https://developer.qcloudimg.com/http-save/4037127/556e5fe568e4c858d98cafd1ba74b578.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>切换版本</p><h4 id="安装redis">安装<a href="https://cloud.tencent.com/product/crs?from=10680">redis</a></h4><p>这个是云崽运行必须的，否则云崽会直接报错redis连接失败。</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/e000be20d9ac8a39026abfc31a8b3460.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>安装redis</p><h4 id="git克隆云崽">git克隆云崽</h4><ol><li>github git clone –depth=1 -b main <a href="https://github.com/Le-niao/Yunzai-Bot.git">https://github.com/Le-niao/Yunzai-Bot.git</a></li><li>gitee git clone –depth=1 -b main <a href="https://gitee.com/Le-niao/Yunzai-Bot.git">https://gitee.com/Le-niao/Yunzai-Bot.git</a></li></ol><p><img src="https://developer.qcloudimg.com/http-save/4037127/cfc260db55390f5d45c3a584417d7dd8.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>git拉取云崽项目</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="title class_">Yunzai</span>-<span class="title class_">Bot</span> #进入<span class="title class_">Yunzai</span>目录</span><br></pre></td></tr></table></figure><p>复制</p><h5 id="安装pnpm，已安装的可以跳过">安装<a href="https://gitee.com/link?target=https%3A%2F%2Fpnpm.io%2Fzh%2Finstallation">pnpm</a>，已安装的可以跳过</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pnpm -g</span><br></pre></td></tr></table></figure><p>复制</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/c0728b98d8174d488e9e223a6e3e0c9f.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>安装pnpm</p><h5 id="安装依赖">安装依赖</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm install -P</span><br></pre></td></tr></table></figure><p>复制</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/47912530219bbc17f97521575c319a43.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>执行依赖安装命令</p><h5 id="运行（首次运行按提示输入登录）">运行（首次运行按提示输入登录）</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app</span><br></pre></td></tr></table></figure><p>复制</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/96eb700a1a9e5062d9f3b532f6181288.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>运行</p><h4 id="docker部署">docker部署</h4><p>安装docker，我这里使用宝塔安装docker，比较方便不用执行命令安装。</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/51a96665c8aa023530c3cfc52bbd2de0.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>安装docker</p><h5 id="拉取镜像">拉取镜像</h5><p>docker 镜像支持 v2 和 v3 的部署，每个版本镜像分为 精简版 和 扩展版，精简版仅有云崽本体（可选加载喵喵插件和图鉴插件），扩展版附带 ffmpeg 环境和 Python 环境（可选加载 Python 插件）。我这里以扩展版为例 精简版</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sirly/yunzai-<span class="attr">bot</span>:v3</span><br></pre></td></tr></table></figure><p>复制</p><p>扩展版</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sirly/yunzai-<span class="attr">bot</span>:v3plus</span><br></pre></td></tr></table></figure><p>复制</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/732eba8ab8870bc67642023e2adb5259.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>拉取镜像</p><h5 id="创建容器">创建<a href="https://cloud.tencent.com/product/tke?from=10680">容器</a></h5><p>云崽不需要特殊端口或者环境变量，直接创建就可以使用。</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/7edddbf95eb372b25e94483f545c2956.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>创建容器</p><p>打开容器终端执行<code>node app</code>就可以运行机器人。根据提示登陆即可。</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/d60fd7155aa37b42fa09344cc314885c.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>容器</p><p><img src="https://developer.qcloudimg.com/http-save/4037127/4fbeaa65032bd4370fdd8d0a430f789e.png?imageView2/2/w/2560/h/7000" alt="img"></p><p>执行命令</p><h3 id="云崽插件列表">云崽插件列表</h3><p><a href="https://gitee.com/yhArcadia/Yunzai-Bot-plugins-index">https://gitee.com/yhArcadia/Yunzai-Bot-plugins-index</a></p>]]></content>
      
      
      <categories>
          
          <category> 原神 </category>
          
          <category> bot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原神 </tag>
            
            <tag> bot </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
