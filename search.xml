<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派一些常见的指令</title>
      <link href="/posts/28e9475e.html"/>
      <url>/posts/28e9475e.html</url>
      
        <content type="html"><![CDATA[<h1>1.关机与重启</h1><h2 id="关机">关机</h2><p>sudo shutdown -h now  #或者 sudo halt</p><h2 id="重启">重启</h2><p>sudo shutdown -r now  #或者 sudo reboot</p><h1>2. 用户与密码</h1><p>树莓派默认主机名是 raspberrypi，默认用户是 pi，密码为 raspberry。</p><h2 id="修改密码">修改密码</h2><p>pi@raspberrypi:~$ sudo passwd<br>Enter new UNIX password:   #输入第一遍密码<br>Retype new UNIX password:  #输入第二遍密码<br>树莓派有一个 root 账号，但默认不启用。如果想折腾，可以启用 ROOT 账号。使用 pi 用户登录后，执行</p><p>pi@raspberrypi:~$ sudo passwd root<br>输入两遍密码即可修改 root 密码。</p><h2 id="切换用户">切换用户</h2><p>su root #切换到root用户<br>如切换用户失败，说明 root 账号已锁定，需要解锁。</p><p>pi@raspberrypi:~$ sudo passwd --unlock root<br>passwd:<br>输入密码，即可解锁 root 账号。</p><h1>3.更新系统与软件</h1><h2 id="更新软件信息数据库">更新软件信息数据库</h2><p>apt-get update</p><h2 id="进行系统升级">进行系统升级</h2><p>apt-get upgrade</p><h2 id="安装软件">安装软件</h2><p>apt-get install softname1 softname2 softname3……</p><h2 id="卸载软件">卸载软件</h2><p>apt-get remove softname1 softname2 softname3……</p><h2 id="卸载并清除配置">卸载并清除配置</h2><p>apt-get remove –purge softname1</p><h2 id="搜索软件包">搜索软件包</h2><p>apt-cache search softname1 softname2 softname3……</p><h1>4.文件和文件夹操作</h1><h2 id="文件夹导航命令">文件夹导航命令</h2><p>ls  #查看当前目录内容<br>cd work #切换到 work 工作目录<br>pwd   #查看当前路径</p><h2 id="创建文件夹">创建文件夹</h2><p>mkdir work  # 在当前目录创建一个 work 文件夹<br>删除文件目录，可使用 rm 或者 rmdir 命令。</p><h2 id="使用rmdir命令删除文件夹">使用rmdir命令删除文件夹</h2><p>rmdir work # 删除 work 文件夹<br>使用 rm 命令可删除文件和文件夹</p><p>rm -rf  work  # 删除 work 文件夹<br>rm   test.txt  # 删除 test.txt 文件<br>需要注意的是，不能直接使用 rm 来删除文件目录，rm 指令后面需要参数。</p><p>-r 就是向下递归，不管有多少级目录，一并删除 -f 就是直接强行删除，不作任何提示。</p><p>修改文件名或文件夹名，使用 mv 命令。</p><h2 id="mv-旧文件名-新文件名">mv 旧文件名  新文件名</h2><p>mv demo demo1  # 将demo文件夹修改为demo1<br>创建文件</p><p>相比创建目录的方法，创建文件的方法就会多一些。</p><p>可以使用 vi 命令，vim命令 或者是 touch 命令。这几个命令的使用方式都是指令 + 文件名。</p><p>vi one.txt<br>vim two.txt<br>touch three.txt<br>不同之处 在于 vi 或者 vim 命令时，会跳转到文本编辑长，创建的文件需要保存才会生效。而 touch 命令则会直接创建空白文件。</p><h1>5.传输文件</h1><p>可以简单用 scp 命令来实现。</p><p>scp[本地文件的路径] [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp /Users/mac/Desktop/test.txt <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root<br>从本地将文件夹传输到服务器:</p><p>scp -r[本地文件的路径] [服务器用户名]@[服务器地址]:[服务器上存放文件的路径]</p><p>scp -r /Users/mac/Desktop/test <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root<br>将服务器上的文件传输到本地:</p><p>scp [服务器用户名]@[服务器地址]:[服务器上存放文件的路径] [本地文件的路径]</p><p>scp <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root/default/test.txt /Users/mac/Desktop<br>将服务器上的文件夹传输到本地:</p><p>scp -r [服务器用户名]@[服务器地址]:[服务器上存放文件的路径] [本地文件的路径]</p><p>scp -r <a href="mailto:root@192.168.1.1">root@192.168.1.1</a>:/root/default/test /Users/mac/Desktop<br>scp 指令在 mac OS 系统中也可使用，因此可用来向树莓派上传输文件。</p><p>指令中的文件路径，必须是绝对路径。如不知道文件或文件夹的绝对路径，可使用 pwd 命令查看。</p>]]></content>
      
      
      <categories>
          
          <category> 树莓派 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客哔哩哔哩视频适应配置</title>
      <link href="/posts/fc3c7629.html"/>
      <url>/posts/fc3c7629.html</url>
      
        <content type="html"><![CDATA[<p>在<code>[BlogRoot]\source\css\custom.css</code>自定义样式的文件中引入如下代码（这是我的，你可以自行微调）：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*哔哩哔哩视频适配*/</span></span><br><span class="line"><span class="selector-class">.aspect-ratio</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">3%</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aspect-ratio</span> <span class="selector-tag">iframe</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">86%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接复制插入你的 <code>md</code> 文章就行，修改里面的 <code>aid</code> 为你视频的 <code>AV</code>号：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">class</span>=<span class="string">&quot;aspect-ratio&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;iframe src=&quot;https://player.bilibili.com/player.html?aid=474023258&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot; </span></span><br><span class="line"><span class="code">    scrolling=&quot;no&quot; </span></span><br><span class="line"><span class="code">    border=&quot;0&quot; </span></span><br><span class="line"><span class="code">    frameborder=&quot;no&quot; </span></span><br><span class="line"><span class="code">    framespacing=&quot;0&quot; </span></span><br><span class="line"><span class="code">    high_quality=1</span></span><br><span class="line"><span class="code">    danmaku=1 </span></span><br><span class="line"><span class="code">    allowfullscreen=&quot;true&quot;&gt; </span></span><br><span class="line"><span class="code">    &lt;/iframe&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 哔哩哔哩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哔哩哔哩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo最简单搭建教程！干货分享！</title>
      <link href="/posts/b8138abc.html"/>
      <url>/posts/b8138abc.html</url>
      
        <content type="html"><![CDATA[<h1>1.开始搭建</h1><h2 id="1-1准备">1.1准备</h2><h3 id="注意事项">注意事项</h3><ul><li>输入代码时，核对准确，最好切换成英文输入法；</li><li>将文中的 “用户名” 和 “邮箱” 替换为自己的 GitHub 账户名和绑定的邮箱；</li></ul><h2 id="2-安装Node">2.安装Node</h2><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。</p><p>下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>建议选个低版本的</p><p>历史版本下载页面：<a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a></p><ol><li><p>下载后安装，安装的目录可以使用默认目录【C:/Program Files/nodejs/】。</p></li><li><p>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</p></li><li><p>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">npm config set registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><h2 id="3-安装Hexo">3.安装Hexo</h2></li><li><p>在<code>Git BASH</code>输入如下命令安装</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHELL</span></span><br><span class="line"><span class="keyword"></span>npm <span class="keyword">install </span>-g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入hexo -v验证是否安装成功。</p></li></ol><p><img src="https://s1.vika.cn/space/2022/10/27/f05830f48da44ea98d2a55c3a6663004" alt=""></p><h2 id=""></h2><h2 id="4-Github注册">4.Github注册</h2><ol><li>进入官网 <a href="https://github.com/">https://github.com/</a><br><a href="https://bu.dusays.com/2022/05/12/627d2c0449341.webp"><img src="https://bu.dusays.com/2022/05/12/627d2c0449341.webp" alt="Github注册"></a></li><li>点击右上角的 Sign up(注册)<br><a href="https://bu.dusays.com/2022/05/12/627d2c05ee628.png"><img src="https://bu.dusays.com/2022/05/12/627d2c05ee628.png" alt="Github注册"></a></li><li>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</li><li>注册完成后，点击右上角的<code>+</code>按钮，选择<code>New repository</code>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</li></ol><p><a href="https://s1.vika.cn/space/2022/10/27/7a06143d180d47088833a486732dccf5"><img src="https://s1.vika.cn/space/2022/10/27/7a06143d180d47088833a486732dccf5" alt="image-20221027110619071"></a></p><ul><li>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</li><li>Description：为描述仓库（选填）</li><li>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</li><li>点击 Creat repository 进行创建</li></ul><p><a href="https://s1.vika.cn/space/2022/10/27/0a4dbb10ca69422ca9ccb7493d0f177a"><img src="https://s1.vika.cn/space/2022/10/27/0a4dbb10ca69422ca9ccb7493d0f177a" alt="image-20221027111641909"></a></p><h2 id="5-Git的安装">5.Git的安装</h2><ol><li><p>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p></li><li><p>由于官网下载太慢可以通过淘宝的开源镜像下载</p></li><li><p>网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a></p></li><li><p>下载版本更具自己的需求选择即可。</p><p><a href="https://s1.vika.cn/space/2022/10/27/28a7d7e6ef3f4df080da8d7e8337431b"><img src="https://s1.vika.cn/space/2022/10/27/28a7d7e6ef3f4df080da8d7e8337431b" alt="image-20221027111755697"></a></p></li><li><p>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</p></li><li><p>点击电脑左下角开始即可看见<code>Git Bash</code>。</p></li></ol><p><a href="https://bu.dusays.com/2022/05/13/627d410ddc940.webp"><img src="https://bu.dusays.com/2022/05/13/627d410ddc940.webp" alt="Git Bash"></a></p><ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul><ol><li><p>常用命令</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  <span class="string">//</span>查看所有配置</span><br><span class="line">git config <span class="params">--system</span> <span class="params">--list</span> <span class="string">//</span>查看系统配置</span><br><span class="line">git config <span class="params">--global</span> <span class="params">--list</span> <span class="string">//</span>查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.name</span> <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.email</span> <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过<code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</p><p><a href="https://s1.vika.cn/space/2022/10/27/9115d60b377a47f3a8b79779a287ee65"><img src="https://s1.vika.cn/space/2022/10/27/9115d60b377a47f3a8b79779a287ee65" alt="image-20221027112049822"></a></p></li></ol><h2 id="6-连接到GitHub">6.连接到GitHub</h2><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHELL</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱&quot;</span></span></span><br></pre></td></tr></table></figure><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p><a href="https://bu.dusays.com/2022/05/14/627e87126fc59.png"><img src="https://bu.dusays.com/2022/05/14/627e87126fc59.png" alt="公钥"></a></p><p>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。</p><p><a href="https://bu.dusays.com/2022/05/14/627e87156038a.png"><img src="https://bu.dusays.com/2022/05/14/627e87156038a.png" alt="记事本打开公钥"></a></p></li><li><p>将 SSH KEY 配置到 GitHub<br>进入github，点击右上角头像 选择<code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到<code>Key</code>那一栏。</p><p><img src="https://s1.vika.cn/space/2022/10/27/4a69d999fed54ff78a5b84805d3c6a12" alt="image-20221027112347632"></p><p><a href="https://s1.vika.cn/space/2022/10/27/aa20ae7d8db34e2596638f5f031f0814"><img src="https://s1.vika.cn/space/2022/10/27/aa20ae7d8db34e2596638f5f031f0814" alt="image-20221027112416710"></a></p><p><a href="https://s1.vika.cn/space/2022/10/27/eaccde8a10eb4cde945a1ed221bb6ace"><img src="https://s1.vika.cn/space/2022/10/27/eaccde8a10eb4cde945a1ed221bb6ace" alt="image-20221027112657256"></a></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/122bb1ef33074bee84030a525ce1ec56"><img src="https://s1.vika.cn/space/2022/10/27/122bb1ef33074bee84030a525ce1ec56" alt="image-20221027112918539"></a></p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p></li></ol><h2 id="7-初始化Hexo">7.初始化Hexo</h2><ol><li><p>在目标路径（我这里选的路径为【C:/Hexo-Blog】）打开cmd命令窗口，执行<code>hexo init</code>初始化项目。</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">hexo</span> <span class="variable">init</span> <span class="variable">blog</span>-<span class="function"><span class="title">demo</span>(项目名)</span></span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/1fbeb52671cf4b1daeca3660d1a31a2f"><img src="https://s1.vika.cn/space/2022/10/27/1fbeb52671cf4b1daeca3660d1a31a2f" alt="image-20221027113206776"></a></p></li><li><p>进入<code>blog-demo</code> ，输入<code>npm i</code>安装相关依赖。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog-demo  <span class="regexp">//</span>进入blog-demo文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><a href="https://s1.vika.cn/space/2022/10/27/150eeb3e61c94b89a1cad2a3079b1f94"><img src="https://s1.vika.cn/space/2022/10/27/150eeb3e61c94b89a1cad2a3079b1f94" alt="image-20221027113331624"></a></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：</p></li></ol><p><a href="https://s1.vika.cn/space/2022/10/27/70cf503f27c54d30a31c6b13735023b7"><img src="https://s1.vika.cn/space/2022/10/27/70cf503f27c54d30a31c6b13735023b7" alt="image-20221027113438707"></a></p><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><ol><li><p>输入hexo server或者hexo s 启动项目</p><p><a href="https://s1.vika.cn/space/2022/10/27/688592f6db1448d29a2f722fc7a0bb0a"><img src="https://s1.vika.cn/space/2022/10/27/688592f6db1448d29a2f722fc7a0bb0a" alt="image-20221027113534970"></a></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a> ，看到下面的效果，说明你的博客已经构建成功了。</p><p><a href="https://bu.dusays.com/2022/05/26/628e5423df640.webp"><img src="https://bu.dusays.com/2022/05/26/628e5423df640.webp" alt="博客首页"></a></p></li></ol><h2 id="8-将Hexo挂载到GitHub-Pages">8.将Hexo挂载到GitHub Pages</h2><ol><li><p>安装 hexo-deployer-git</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure></li><li><p>修改 _config.yml 文件<br>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> git@github.com:Fomalhaut-Blog/Fomalhaut-Blog.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> main</span><br></pre></td></tr></table></figure></li><li><p>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo <span class="keyword">generate</span> &amp;&amp; hexo deploy  <span class="comment">// Git BASH终端</span></span><br><span class="line">hexo clean; hexo <span class="keyword">generate</span>; hexo deploy  <span class="comment">// VSCODE终端</span></span><br></pre></td></tr></table></figure><ul><li><p>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</p></li><li><p>hexo generate：生成静态文章，可以用<code>hexo g</code>缩写</p></li><li><p>hexo deploy：部署文章，可以用<code>hexo d</code>缩写</p><p><a href="https://s1.vika.cn/space/2022/10/27/7ed7b8256d75408aa86e90cd37d0ea53"><img src="https://s1.vika.cn/space/2022/10/27/7ed7b8256d75408aa86e90cd37d0ea53" alt="image-20221027113704801"></a></p><p>注意：deploy时可能要你输入 username 和 password。</p><p>如果出现<code>Deploy done</code>，则说明部署成功了。</p><p><a href="https://s1.vika.cn/space/2022/10/27/85b61e7242214d368539d744b4778a5d"><img src="https://s1.vika.cn/space/2022/10/27/85b61e7242214d368539d744b4778a5d" alt="image-20221027113756069"></a></p><p>稍等两分钟，打开浏览器访问：<a href="https://fomalhaut-blog.github.io/">https://wangwuyue0916.github.io</a> ，这时候我们就可以看到博客内容了。</p><p><a href="https://s1.vika.cn/space/2022/10/27/6de50dfe03604b07aa26fb7dd5fe1f99"><img src="https://s1.vika.cn/space/2022/10/27/6de50dfe03604b07aa26fb7dd5fe1f99" alt="image-20221027113923949"></a></p></li></ul></li></ol><h1>结尾</h1><p>ok，到这里Hexo的基本框架就已经完成了！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 演示 </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
